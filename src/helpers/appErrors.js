'use strict';

var appError = {
    createStudentError: 'CREATE_STUDENT_ERROR',
    sendingMailAAError: 'SENDIND_MAIL_ACCOUNT_ACTIVATION_ERROR',
    createCertifierError: 'CREATE_CERTIFIER_ERROR',
    updateCertifierError: 'UPDATE_CERTIFIER_ERROR',
    loginUserError: 'USER_BAD_CREDENTIALS',
    createAuthTokenError: 'CREATE _AUTHENTICATE_TOKEN_ERROR',
    authTokenError: 'AUTHENTICATE_TOKEN_ERROR',
    authTockenExpiredError: 'AUTHENTICATE_TOKEN_EXPIRED_ERROR',
    getCategoriesError: 'GET_CATEGORIES_ERROR',
    emailIsNotForStudentUser: 'EMAIL_IS_NOT_FOR_STUDENT_USER',
    associateStudentError: 'ASSOCIATE_STUDENT_ERROR',
    updateCourseError: 'UPDATE_COURSE_ERROR',
    getInstituteError: 'GET_INSTITUTE_ERROR',
    bulkUploadCourseInstitute: 'BULK_UPLOAD_COURSE_INSTITUTE',
    getInvitationError: 'GET_INVITATION_ERROR',
    createInvitationError: 'CREATE_INVITATION_ERROR',
    invitationInexistentError: 'INVITATION_INEXISTENT_ERROR',
    confirmUserError: 'CONFIRM_USER_ERROR',
    userInexistentError: 'USER_INEXISTENT_ERROR',
    getUserError: 'GET_USER_ERROR',
    studentCertifiedError: 'STUDENT_CERTIFIED_ERROR',
    certificationNotFound: 'CAN_NOT_FIND_CERT_ERROR',
    deleteStudentInstituteError: 'DELETE_STUDENT_ERROR',
    urlInexistentError: 'URL_INEXISTENT_ERROR',
    userInactiveError: 'USER_INACTIVE_ERROR',
    getCertificateBatchError: 'GET_CERTIFICATE_BATCH_ERROR',
    callFundsServiceError: 'CALL_FUNDS_SERVICE_ERROR',
    createCerticateBatchesError: 'CREATE_CERTIFICATE_BATCHES_ERROR',
    updateCertificateFundsError: 'UPDATE_CERTIFICATE_FUNDS_ERROR',
    createFundingAddressesError: 'CREATE_FUNDING_ADDRESSES_ERROR',
    createIssuingAddressError: 'CREATE_ISSUING_ADDRESS_ERROR',
    createRevokingAddressesError: 'CREATE_REVOKING_ADDRESS_ERROR',
    createCertificateError: 'CAN_NOT_CREATE_CERT_ERROR',
    updateCertificateError: 'CAN_NOT_UPDATE_CERT_ERROR',
    createJsonCertificateError: 'CAN_NOT_CREATE_JSON_CERT_ERROR',
    getCertificateTransactionError: 'GET_CERTIFICATE_TRANSACTION_ERROR',
    getConfirmationTransactionError: 'GET_CONFIRMATION_TRANSACTION_ERROR',
    updateCertificateTransactionError: 'UPDATE_CERTIFICATE_TRANSACTION_ERROR',
    txSentToBCSuccess: "TRANSACTION_SENT_TO_BC_ERROR",
    revokingAddressError: "REVOKING_ADDRESS_ERROR",
    createCerticateTransactionError: 'CREATE_CERTIFICATE_TRANSACTION_ERROR',
    getCertificatesByStudentIdError: 'GET_CERTIFICATES_BY_STUDENT_ID_ERROR',
    createCertificatesError: 'CREATE_CERTIFICATES_ERROR',
    getStudentError: 'GET_STUDENT_ERROR',
    getRawTransactionError: 'GET_RAW_TRANSACTION_ERROR',
    proofValidationFail: 'PROOF_VALIDATION_FAIL',
    validateCertificateError: 'VALIDATE_CERTIFICATE_ERROR',
    updateStudentError: 'UPDATE_STUDENT_ERROR',
    notFoundStudentError: 'NOT_FOUND_STUDENT_ERROR',
    emptyFile: 'EMPTY_FILE',
    hasAnyCertificateByInstituteId: 'HAS_CERTIFICATES_BY_INSTITUTE_ID_ERROR'
};

module.exports = appError;
